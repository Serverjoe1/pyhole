# pyhole - a clone of the Pi-hole DNS adblocker, written in Python.
# pyhole  (c) 2016 by ryt51V
# Pi-Hole (c) 2015, 2016 by Jacob Salmela

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# lighttpd config for Pi-hole

server.modules = (
	"mod_access",
	"mod_accesslog",
	"mod_expire",
	"mod_compress",
 	"mod_redirect",
	"mod_setenv",
	"mod_rewrite",
	"mod_auth"
)

server.document-root        = "@web_root_pyhole@"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.bind                 = "@IPv4addr@"
server.port                 = 80
accesslog.filename			= "/var/log/lighttpd/access.log"
accesslog.format			= "%{%s}t|%V|%r|%s|%b"


index-file.names            = ( "index.php", "index.html", "index.lighttpd.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ( "application/javascript", "text/css", "text/html", "text/plain" )

# default listening port for IPv6 falls back to the IPv4 port
include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

$SERVER["socket"] == "@IPv4addr@:80" {
	
	server.document-root        = "@web_root_pyhole@"
	server.error-handler-404	= "pyhole/index.html"
	
	# Create a response header for debugging using curl -I
	setenv.add-response-header = ( "X-Pi-hole" => "A black hole for Internet advertisements." )
	
}

$SERVER["socket"] == "@IPv4addr@:8080" {
	
	server.document-root        = "@web_root_admin@"
	
	# Redirect root to subdirectory.
	url.redirect = ("^/$" => "/admin" )
	
	# Create a response header for debugging using curl -I
	setenv.add-response-header = ( "X-Pi-hole" => "The Pi-hole Web interface is working!" )
	
	auth.backend = "htpasswd"
	auth.backend.htpasswd.userfile = "@htpasswd_file@"
	
	auth.require = ( "" =>
		(
				"method" => "basic",
				"realm"  => "Pi-hole Admin Interface",
				"require" => "user=pi-hole"
		)
	)
	
}
